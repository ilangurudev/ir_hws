add_noise_cols(df, n_xs)
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
all_trains
x <- c(1,0)
abs(x-1)
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- 0.25
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
getwd()
std <- 1
n_rows_frac <- 0.25
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs){
for(i in n_xs){
df <- add_noise_column(df, i)
}
df
}
change_labels <- function(df){
x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs) %>%
change_labels()
})
add_noise_column <- function(df, n_x, std = std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs) %>%
change_labels()
})
#change the seed to get a different noise level
set.seed(1)
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
add_noise_cols <- function(df, n_xs, sd){
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- 0.25
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
round(1.33265698)
round(5.33265698)
as.integer(5.33265698)
change_labels <- function(df){
# x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
change_labels <- function(df){
# x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
df
}
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- 0.25
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
# x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
df
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
# x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - 1)
df[["X1"]] <- x1
df
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
all_trains[[1]]
all_trains[[1]]$X1 %>% table()
?if_else
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
# x1 <- df %>% sample_frac(n_rows_frac) %>% pull("X1")
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - sample(c(1,2), length(ids)))
df[["X1"]] <- x1
df
}
#change the seed to get a different noise level
set.seed(1)
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map(all_trains, function(df){
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
#change the seed to get a different rdg
set.seed(1)
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
#change the seed to get a different rdg
set.seed(1)
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
# message(str_c("Generating noise in column ", n_x))
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
message(str_c("Generating noise in columns"))
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
message(str_c("Generating noise in labels"))
ids <- sample(1:nrow(df), as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - sample(c(1,2), length(ids)))
df[["X1"]] <- x1
df
}
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map2(all_trains, 1:5, function(df,n){
message(str_c("df no ", n))
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
?sample
debug(change_labels)
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
#change the seed to get a different rdg
set.seed(1)
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
# message(str_c("Generating noise in column ", n_x))
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
message(str_c("Generating noise in columns"))
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
message(str_c("Generating noise in labels"))
ids <- sample(1:nrow(df), size = as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - sample(c(1,2), length(ids)))
df[["X1"]] <- x1
df
}
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map2(all_trains, 1:5, function(df,n){
message(str_c("df no ", n))
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
debug(change_labels)
dfs_noise <-
map2(all_trains, 1:5, function(df,n){
message(str_c("df no ", n))
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
as.integer(n_rows_frac*nrow(df))
nrow(df)
ids
x1 <- df[["X1"]]
abs(x1[ids] - sample(c(1,2), length(ids)))
sample(c(1,2), length(ids)
sample(c(1,2), length(ids))
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
#change the seed to get a different rdg
set.seed(1)
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
# message(str_c("Generating noise in column ", n_x))
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
message(str_c("Generating noise in columns"))
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
message(str_c("Generating noise in labels"))
ids <- sample(1:nrow(df), size = as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - sample(c(1,2), length(ids), replace = F))
df[["X1"]] <- x1
df
}
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map2(all_trains, 1:5, function(df,n){
message(str_c("df no ", n))
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
pacman::p_load(tidyverse, rebus)
setwd("./data_science/ir_hws/hw1/MQ2008/")
std <- 1
n_rows_frac <- .5
#change the seed to get a different rdg
set.seed(1)
all_trains <-
map(1:5, function(x){
read_delim(str_c("./Fold",x,"/train.txt"), delim = " ", col_names = F)
})
add_noise_column <- function(df, n_x, std){
# message(str_c("Generating noise in column ", n_x))
col_name <- str_c("X", n_x)
col_vals <- df[[col_name]]
col_index <- col_vals %>% str_extract(START %R% one_or_more(DGT))
col_vals <- col_vals %>% str_replace(START %R% col_index, "") %>% str_replace(":", "") %>% as.numeric()
col_vals <- abs(col_vals + rnorm(length(col_vals), 0, std))
col_vals <- str_c(col_index,":",col_vals)
df[[col_name]] <- col_vals
df
}
add_noise_cols <- function(df, n_xs, sd){
message(str_c("Generating noise in columns"))
for(i in n_xs){
df <- add_noise_column(df, i, sd)
}
df
}
change_labels <- function(df){
message(str_c("Generating noise in labels"))
ids <- sample(1:nrow(df), size = as.integer(n_rows_frac*nrow(df)))
x1 <- df[["X1"]]
x1[ids] <- abs(x1[ids] - sample(c(1,2), length(ids), replace = T))
df[["X1"]] <- x1
df
}
n_xs <- sample(c(3:48,54,57), 40)
dfs_noise <-
map2(all_trains, 1:5, function(df,n){
message(str_c("df no ", n))
add_noise_cols(df, n_xs, std) %>%
change_labels()
})
walk2(dfs_noise, 1:5, function(x,y){
filename = str_c("./Noise/Fold",y,"/train.txt")
write_delim(x,filename, col_names = F)
})
